version: '3'

volumes:
    db: {}
        # driver: local
        # driver_opts:
        #     type: none
        #     o: bind
        #     device: ${VOLUME_PATH_DB}
    wp: {}
        # driver: local
        # driver_opts:
        #     type: none
        #     o: bind
        #     device: ${VOLUME_PATH_WP}
services:  # 컨테이너에 관한 정의
    mariadb:
        build: ./requirements/mariadb  # image 대신 해당 폴더에 있는 Dockerfile 구동
        image: mariadb
        container_name: mariadb  # 컨테이너 이름 == 서비스 이름
        restart: always  # 컨테이너를 수동으로 끄기전까지 항상 재시작
                # no: 수동으로 재시작 합니다.
                # on-failure: 오류가 있을 시에 재시작합니다.
        env_file:
            - .env
        expose:
            - "3306"
        networks:
            - intra
        volumes:
            - db:/var/lib/mysql
        tty: true
    nginx:
        # image: debian:buster
        depends_on:
          - wordpress
        build: ./requirements/nginx
        image: nginx
        container_name: nginx  # 컨테이너 이름 == 서비스 이름
        restart: always
        env_file:
            - .env
        ports:
            - "443:443"
        volumes:
            - wp:/var/www/html
        networks:
            - intra
        tty: true
    wordpress:
        # image: debian:buster
        depends_on:
          - mariadb
        build: ./requirements/wordpress
        image: wordpress
        container_name: wordpress  # 컨테이너 이름 == 서비스 이름
        restart: always
        env_file:
            - .env
        volumes:
            - wp:/var/www/html
        expose: 
            - "9000"
        networks:
            - intra
        tty: true
networks:
    intra:
        driver: bridge  # 하나의 호스트 컴퓨터에서 여러 개의 컨테이너들이 통신할 수 있게 한다.
              # host : 호스트 컴퓨터와 동일한 네트워크에서 여러 개의 컨테이너들이 통신할 수 있게 한다.
              # overlay : 여러 호스트 컴퓨터(다른 네트워크)에서 여러 개의 컨테이너들이 통신할 수 있게 한다.
